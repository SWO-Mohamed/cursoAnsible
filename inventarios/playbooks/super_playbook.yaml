# Este es mi fichero de playbook

--- #crear un nuevo play
# Contra qien opero
- hosts: all # el guion es un item de la lista
#Opciones de conexion
  remote_user: root
  order: inventory # reverse_inventory | sorted | reverse_sorted | shuffle
  # Ansible ira ejecuntado las TASKS de manera secuencial pero en paralelo sobre diferentes entornos
  # Por defecto lo hace de 5 en 5
  
  # variables TODO
  vars:
   variable1: Hola amigo !!
   variable2: 22
   variable3: 
        subvalor1: 1
        subvalor2: 2
        
  #comienza la difinicion de tareas
  tasks:
  
  # Comienza UNA tarea
   - name: Mi primera tarea
     debug:
        # Si quiero usar variables, uso doblÃ±e llaves y se abre/cierra comillas dobles
        msg: "{{variable1}} esta sera mi primera tarea"
      
  # Comienza otra tarea
   - name: Mi segunda tarea
     debug:
        # unsafe eVITA que un texto se procese por JINJAAAA !!!
        msg: !unsafe "En ninja va todo con dobles llaves {{ Aqui va mi variable }}"
      
  # Comienza otra tarea
   - name: Mi tercera tarea
     debug:
        msg: "{{ variable1 }} voy a comezar la tarea {{ numerotarea }}, en el servidor {{ sistema }} {{ sitema2 }}"
     # dentro de una tarea podemos poner variables nuevas 
     vars:
      numerotarea: 3
      
   # Comienza otra tarea con variables de diccionario
   - name: Mi quarta tarea
     debug:
        msg: "Valores del diccionario {{ variable3.subvalor2 }}"
        
   # Comienza otra tarea para obetner los facts. Informacion del equipo
   - name: Mi tarea de facts
     debug:
        # msg: "{{ ansible.facts }}"
        var: ansible_facts.dns.nameservers[0]
        
    # Mi primera tarea CONDICIONAL
   - name: Mi tarea condicional
     debug:
        msg: "He entrado"
        # WHEN: ansible_facts.distribution == 'Ubuntu' and variable2 == 2
        # WHEN: ansible_facts.distribution == 'Ubuntu' or variable2 == 2
     when: # esta sintaxi es un AND encuebierto
      - ansible_facts.distribution == 'Ubuntu'
      - variable2 == 22
      
    # Mi tarea NORMALITA
   - name: Mi tarea normalita 1
     debug:
      msg: "Me ejecuto normalmente 1"
     changed_when: True
     notify: mievento
     
     # Mi tarea NORMALITA 2
   - name: Mi tarea normalita 2
     debug:
      msg: "Me ejecuto normalmente 2"
     changed_when: True
     notify: mievento
     
    # Una tarea que explosiva
   - name: Mi tarea EXPLOSIVA
     shell:
      cmd: umane
     failed_when: explosiva.rc > 200
     register: explosiva
      
    # Una tarea DETRAS de la explosion
   - name: Mi tarea EXPLOSIVA resultado
     debug:
      msg: "{{ explosiva.stdout }}"
     when: explosiva.rc == 0
     
#----------------------------------------------------------
#----------------------------------------------------------

  handlers:
    # Mi tarea OPCIONAL 1
   - name: tarea opcional 1
     debug:
      cmd: "Me ejecuto opcionalmente 1"
     lista: mievento
     
    # Mi tarea OPCIONAL 2
   - name: tarea opcional 2
     debug:
      msg: "Me ejecuto opcionalmente 2"
     listen: mievento